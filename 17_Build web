创建一个新文件夹 named：JoinUs
ls                                                           *确定文件夹里文件的数量
ctrl + c                                                     *结束运行

root@goorm:/workspace/mysql# cd JoinUs/                      *切换到joinUs的文件夹
root@goorm:/workspace/mysql/JoinUs# ls
root@goorm:/workspace/mysql/JoinUs# npm init                 *创建一个新的package

package name: (joinus) join_us                               *package 参数设定
version: (1.0.0)
description:
entry point: (index.js) app.js
test command:
git repository:
keywords:
author:
license: (ISC)

npm install express --save                                                                   *在package 内导入express，faker， mysql package
npm install faker mysql --save
                                                              
                                                                                             *port: work with firewall that block something that you did't want to block or you're not allowed to go to certain Website.
                                                              
var express = require('express');                             
var app = express();

app.get('/', async(req, res) => {                                                             *console.log(req);  show网页信息
	res.send("IS THIS THING ON?");
});

app.get('/joke', async(req, res) => {                                                         *add multiple router
	var joke = "What do you call a dog that does magic tricks? A labracadabrador";
	res.send(joke);
});


app.get('/random_num', async(req, res) => {
	var num = Math.floor(Math.random()*10+1);                                              *0-10 中任意一个数字
	res.send('your lucky num is ' + num);
});	

app.listen(3000, function(){
	console.log('running on 3000');
});

project ---→ runing URL and port ---→ port = 3000(default)                                    * After editting and remember start the server (port=3000) on everytime!

                                                                                              *connect express with mysql
var express = require('express');
var mysql = require('mysql');
var app = express();                                                                          *app 与express，mysql 连接

var connection = mysql.createConnection({                                                     *不要忘记，与mysql 的目标database 连接 
	host       : 'localhost',
	user       : 'root',
	database   : 'join_us'
});
                                                                                           
app.get('/', function(req, res){                                                              *与mysql node 语法一致
	var q = 'SELECT COUNT(*) AS count FROM users';
	connection.query(q, function(error, results){
	if (error) throw error;
	var msg = 'we have ' + results[0].count + ' users';
	res.send(msg);
	});
});                                            

<strong>What do you call a dog that does magic tricks?</strong>
<em>A labracadabrador</em>

                                                                                              *为了一个router 能够一次性输出更多内容需要引入 ejs API；
npm install --save ejs                                                                        *下载ejs: 可以在html 中加入变量                                                              
运行code：app.set('view engine', 'ejs');                                                      *在相应js 文档中运行ejs
创建views 文档，在此文档下创建home.ejs文件                                                     
在home.ejs 文件中输入：<h>this is html</h>                                                    *在根目录处创建home 文档，用来编辑输出的内容
res.send();  更改为 res.render("home");                                                       *在js 文档中运行home 文档内容; 可以重复使用

app.get('/', function(req, res){                                                             *app.js 文件中
	var q = 'SELECT COUNT(*) AS count FROM users';
	connection.query(q, function(error, results){
	if (error) throw error;
	var count = results[0].count;
	res.render("home", {count: count});                                                    *data 是一个变量
	});
});

<h1>JOIN US</h1>
<p>
	Enter you email to join <strong><%=count%></strong> others on our waitinglist.        *variable:<%=count%>
</p>
<form>
	<input type="text" placeholder="Enter your email">
	<button>
		Join Now
	</button>
</form>

<h1>JOIN US</h1>
<p>
	Enter you email to join <strong><%=count%></strong> others on our waitinglist. 
</p>
<form method="GET" action="/joke">                                                            *get method
	<input type="text" placeholder="Enter your email">
	<button>
		Join Now
	</button>
</form>

                                                                                              *生成webpage
<h1>JOIN US</h1>                                                                              *home.ejs 文件中
<P>
	Enter you email to join <strong><%=count%></strong> others in out waitlist.            *data 是一个变量
</P>
<form method="POST" action='/register'>                                                        *生成button 框             
 <input type="text" class="form" name="email" placeholder="Enter Your Email">
 <button>Join Now</button>
</form>

 
npm install --save body-parser;                                                                *在网站上输入信息（邮箱），可以反映到数据库里
var bodyParser = require('body-parser');
app.use(bodyParser.urlencoded({extended: true}));
app.post('/register', function(req, res){
	var person = {
		email: req.body.email                                                          *req.body.email, 此处email 跟name: email (home.ejs)对应
	};
	connection.query('INSERT INTO users SET ?', person, function(error, result){
		if (error) throw error;
		// res.send("Thanks for joining our waiting list");                            *memo
		res.redirect('/');                                                             *返回到app.get('/', function(req, res){ });
	});
});


                                                                                               *网页更改颜色，样式（css，html）
<link rel="stylesheet" href='/app.css'>                                                        *home.ejs
creat folder: public and then creat file: app.css                                    
app.use(express.static(__dirname + "/public"));                                                *app.js

html                                                                                           *home.ejs 更改位置（比如：居中）
css                                                                                            *app.css 更改颜色，样式
